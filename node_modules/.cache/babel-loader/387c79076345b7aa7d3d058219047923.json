{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useSelect = () => {\n  _s();\n\n  let history = useHistory();\n\n  const selection = (e, video) => {\n    if (e.target.tagName !== 'svg' && e.target.tagName !== 'path') {\n      let allLinks = {\n        'videoLinks': video.videoLinks,\n        'thumbnailLink': video.thumbnailLink\n      };\n      let watchHistory = JSON.parse(localStorage.getItem(\"watchHistory\"));\n\n      if (watchHistory) {\n        let k = 0;\n        watchHistory.forEach((e, index, obj) => {\n          if (e.videoLinks === allLinks['videoLinks']) {\n            k++;\n            obj.splice(index, 1);\n            obj.unshift(allLinks);\n          }\n        });\n\n        if (k === 0) {\n          watchHistory.unshift(allLinks);\n        }\n      } else {\n        watchHistory = [];\n        watchHistory.push(allLinks);\n      }\n\n      localStorage.setItem('watchHistory', JSON.stringify(watchHistory));\n      history.push({\n        pathname: '/currentVideo',\n        state: {\n          videoLink: video.videoLinks,\n          thumbnailLink: video.thumbnailLink\n        }\n      });\n    }\n  };\n\n  return {\n    selection\n  };\n};\n\n_s(useSelect, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\nexport default useSelect;","map":{"version":3,"sources":["C:/Users/giorgi/Desktop/youtube_clone2/src/hooks/useSelect.js"],"names":["useHistory","useSelect","history","selection","e","video","target","tagName","allLinks","videoLinks","thumbnailLink","watchHistory","JSON","parse","localStorage","getItem","k","forEach","index","obj","splice","unshift","push","setItem","stringify","pathname","state","videoLink"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,MAAIC,OAAO,GAAGF,UAAU,EAAxB;;AAEA,QAAMG,SAAS,GAAG,CAACC,CAAD,EAAGC,KAAH,KAAY;AAE9B,QAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,KAAoB,KAApB,IAA6BH,CAAC,CAACE,MAAF,CAASC,OAAT,KAAqB,MAArD,EAA4D;AAC5D,UAAIC,QAAQ,GAAG;AAAE,sBAAcH,KAAK,CAACI,UAAtB;AAAkC,yBAAiBJ,KAAK,CAACK;AAAzD,OAAf;AACA,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAnB;;AAEA,UAAGJ,YAAH,EAAgB;AACZ,YAAIK,CAAC,GAAG,CAAR;AACAL,QAAAA,YAAY,CAACM,OAAb,CAAqB,CAACb,CAAD,EAAGc,KAAH,EAASC,GAAT,KAAe;AAChC,cAAGf,CAAC,CAACK,UAAF,KAAiBD,QAAQ,CAAC,YAAD,CAA5B,EAA2C;AACvCQ,YAAAA,CAAC;AACDG,YAAAA,GAAG,CAACC,MAAJ,CAAWF,KAAX,EAAiB,CAAjB;AACAC,YAAAA,GAAG,CAACE,OAAJ,CAAYb,QAAZ;AAEH;AACJ,SAPD;;AASA,YAAGQ,CAAC,KAAK,CAAT,EAAW;AACPL,UAAAA,YAAY,CAACU,OAAb,CAAqBb,QAArB;AACH;AAEJ,OAfD,MAiBI;AACAG,QAAAA,YAAY,GAAG,EAAf;AACAA,QAAAA,YAAY,CAACW,IAAb,CAAkBd,QAAlB;AACH;;AAEDM,MAAAA,YAAY,CAACS,OAAb,CAAqB,cAArB,EAAoCX,IAAI,CAACY,SAAL,CAAeb,YAAf,CAApC;AAEAT,MAAAA,OAAO,CAACoB,IAAR,CAAa;AACTG,QAAAA,QAAQ,EAAE,eADD;AAETC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAEtB,KAAK,CAACI,UAAnB;AAA8BC,UAAAA,aAAa,EAACL,KAAK,CAACK;AAAlD;AAFE,OAAb;AAIC;AACJ,GAnCG;;AAoCJ,SAAO;AAACP,IAAAA;AAAD,GAAP;AAEC,CAzCD;;GAAMF,S;UACYD,U;;;AA0ClB,eAAeC,SAAf","sourcesContent":["import { useHistory } from \"react-router-dom\";\r\n\r\nconst useSelect = () => {\r\n    let history = useHistory();\r\n\r\n    const selection = (e,video) =>{\r\n\r\n    if(e.target.tagName !=='svg' && e.target.tagName !== 'path'){\r\n    let allLinks = { 'videoLinks': video.videoLinks, 'thumbnailLink': video.thumbnailLink};\r\n    let watchHistory = JSON.parse(localStorage.getItem(\"watchHistory\"))\r\n\r\n    if(watchHistory){\r\n        let k = 0;\r\n        watchHistory.forEach((e,index,obj)=>{\r\n            if(e.videoLinks === allLinks['videoLinks']){\r\n                k++;\r\n                obj.splice(index,1)\r\n                obj.unshift(allLinks)\r\n                \r\n            }\r\n        })\r\n\r\n        if(k === 0){\r\n            watchHistory.unshift(allLinks)\r\n        }\r\n        \r\n    }\r\n\r\n    else{\r\n        watchHistory = [];\r\n        watchHistory.push(allLinks)\r\n    }\r\n\r\n    localStorage.setItem('watchHistory',JSON.stringify(watchHistory))\r\n\r\n    history.push({\r\n        pathname: '/currentVideo',\r\n        state: { videoLink: video.videoLinks,thumbnailLink:video.thumbnailLink}\r\n    })\r\n    }\r\n}\r\nreturn {selection}\r\n\r\n}\r\n \r\nexport default useSelect;"]},"metadata":{},"sourceType":"module"}